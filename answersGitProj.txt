Question #1 "What is Version Control"
Answer 
Version control is a system that records changes to a file or set of files over time so that you can recall specific versions later.

Question #2 "What is the difference between distributed and centralized version control systems?
Answer
centralized version control systems have a single server that contains all the versioned files, and a number of clients that check out files from that central place, whereas with distributed version control systems clients fully mirror the repository, notjust check out the latest snapshot of the files.

Question #3
What does a version control program do for us?
Answer
allows us to revert files back to a previous state, revert the entire project back toa previous state, compare changes over time, see who last modified something that might be causing a problem, who introduced an issue and when, and more. It generally means that if you screw things up or lose files, you can easily recover. 

Question #4
What is a commit?
Answer
commit takes the files as they are in the staging area and stores that snapshot permanently to your Git directory.

Question #5
What is a check out?
Answer
used to switch branches or to restore working tree files
Updates files in the working tree to match the version in the index or the specified tree. If no paths are given, git checkout will also update HEAD to set the specified branch as the current branch.

Question #6
What is a branch?
Answer
Each commit creates a pointer to previous commit, a branch is simply a lightweight movable pointer to one of these commits, creating a new branch creates a new movable pointer.

Question #7
How long are branches in git supposed to exist?
Answer
a branch will exist once created until its deleted manually

Question #8
How do you create a branch in git?
Answer
use the command git branch <nameOfnewBranch>

Question #9
How do you switch branches in git?
Answer
use command git checkout <nameOfbranch>

Question #10
How do you merge branches in git?
Answer
First you switch to branch you want to merge into say MASTER for example, then you would run command 'git checkout master' then you run command git merge <nameOfbranchBeingMerged>

Question #11
How do you check the status of the files you are presently working on?
use command 'git status'

Question #12
How do you add files to the repository?
Answer
use command 'git add' then 'git commit'

Question #13
What is the name for the primary branch in git?
Answer
MASTER; git init creates master by default and most people don't bother to change it

Question #14
How do you check which branch you presently have checked out?
Answer
use command 'git branch'; an asterick will be next to branch you have checked out

Question #15
What is github?
Answer
GitHub is the single largest host for Git repositories, and is the central point of collaboration for millions of developers and projects.located at https://github.com

Question #16
Why was git created?
Answer
In 2002 the developers of Linux kernel project began to use a proprietary DVCS prog called BitKeeper, when the relationship between company that owned BitKeeper and Linux kernel project colapsed, BitKeeper's free-of-charge status was soon revoked. This prompted the developers of the Linux kernel project, and creator of Linux, Linus Torvalds, to create their own tool based on lessons learned, Git was the result. 

Question #17
What is a typical git workflow?
Answer
First You modify your files in your working directory, then you stage those files, adding snapshots of them to your staging area, then finally you do a commit, which takes the files in the staging area and stores that snapshot permanently to your Git directory.

Question #18
What makes git different than other version control systems?
Answer
Conceptually, most other systems store information as a list of file-based changes. These systems (CVS, Subversion, Perforce, Bazaar, and so on) think of the information they keep as a set of files and the changes made to each file over time. Git thinks of its data more like a set of snapshots of a miniature filesystem. Every time you commit, or save the state of your project in Git, it basically takes a picture of what all your files look like at that moment and stores a reference to that snapshot. 

Question #19
What were the design criteria for git?
Answer
Speed, Simple design, Strong support for non-linear development (thousands of parallel branches), Fully distributed and able to handle large projects like the Linux kernel efficiently (speed and data size)

Question #20
How do we view the past of a project with git?
Answer
use command 'git log'

Question #21
How much information, and what kind of information should be in a commit message?
Answer
brief description of modifications made and/or new files added or You can just leave default message as is, however an empty message will cancel commit
